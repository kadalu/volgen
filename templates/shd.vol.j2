{% for dist_grp in volume.distribute_groups %}
  {% set dist_grp_idx = loop.index0 %}
  {% for storage_unit in dist_grp.storage_units %}
    name {{ volume.name }}-client-{{ (dist_grp_idx * 2) + loop.index0 }}
    type protocol/client
    option transport.socket.read-fail-log false
    option volfile-key /{{ volume.name }}
    option remote-subvolume {{ storage_unit.path }}
    option remote-host {{ storage_unit.node.name }}
    {% if storage_unit.port != 0 %}    option remote-port {{ storage_unit.port }}{% endif %}
    parent {{ volume.name }}-replica-{{ dist_grp_idx }}
  {% endfor %}
{% endfor %}

{% for i in range(volume.distribute_groups|length) %}
  {% set replica_count = volume.distribute_groups[i].replica_count %}
  name {{ volume.name }}-replica-{{ i }}
  type cluster/replicate
  option data-self-heal on
  option iam-self-heal-daemon on
  option self-heal-daemon on
  option metadata-self-heal on
  option choose-local on
  option ensure-durability on
  option data-change-log on
  option entry-self-heal on
  {% if volume.tiebreaker.path != "" %}
    option afr-pending-xattr {{ volume.name }}-client-{{ i * 2 }},{{ volume.name }}-client-{{ (i * 2) + 1}},{{ volume.id }}-ta
    option thin-arbiter {{ volume.tiebreaker.node }}:{{ volume.tiebreaker.path }}
  {% else %}
    option afr-pending-xattr {{ volume.name }}-client-{{ i * replica_count }},{{ volume.name }}-client-{{ (i * replica_count) + 1}}{% if replica_count > 2 %},{{ volume.name }}-client-{{ (i * replica_count) + 2}}{% endif %}
  {% endif %}
  parent {{ volume.name }}
{% endfor %}

name {{ volume.name }}-shd
type debug/io-stats
option volume-id {{ volume.id }}
